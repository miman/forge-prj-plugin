package ${path};

import javax.enterprise.event.Event;
import javax.inject.Inject;

import org.jboss.forge.project.Project;
import org.jboss.forge.project.facets.ResourceFacet;
import org.jboss.forge.project.facets.events.InstallFacets;
import org.jboss.forge.shell.ShellMessages;
import org.jboss.forge.shell.plugins.Alias;
import org.jboss.forge.shell.plugins.Command;
import org.jboss.forge.shell.plugins.Help;
import org.jboss.forge.shell.plugins.Option;
import org.jboss.forge.shell.plugins.PipeOut;
import org.jboss.forge.shell.plugins.Plugin;
import org.jboss.forge.shell.plugins.RequiresProject;
import org.jboss.forge.shell.plugins.SetupCommand;

import ${path}.facet.${class-name}Facet;
import ${path}.completer.${class-name}Completer;
import ${path}.completer.${class-name}Type;

@Alias("${alias}")
@Help("TODO: A plugin that does ...")
@RequiresProject
public class ${class-name}Plugin implements Plugin {
	@Inject
	private Event<InstallFacets> event;

	@Inject
	private Project project;

	@SetupCommand
	@Command(value = "setup", help = "TODO: Write your helptext")
	public void setup(
			@Option(name = "exampleParam", shortName = "ex") String exampleParam,
			PipeOut out) {

		if (!project.hasFacet(ResourceFacet.class)) {
			event.fire(new InstallFacets(ResourceFacet.class));
		}

		if (!project.hasFacet(${class-name}Facet.class))
			event.fire(new InstallFacets(${class-name}Facet.class));
		else
			ShellMessages.info(out, "Project is already a ${class-name} plugin project.");

		if (exampleParam != null) {
			// TODO: do something with this value
		}
	}

	/**
	 * Command to create a test camel route that only regularly writes something to stdout
	 * @param name	The wanted name of the route
	 * @param path	Where the route should be created (under java/src)
	 * @param type	What type of route we should create (auto-complete type)
	 * @param out	Error info statements are written to this pipe to be displayed to the user
	 */
	@Command(value = "add-route", help = "Adds an Apache Camel route to this project")
	public void addRoute(@Option(name = "name", required=true) String name,
			@Option(name = "path", required=false) String path,
			@Option(name = "type", completer=${class-name}Completer.class, required=true) String type,
			PipeOut out) {
		
		if (type.compareToIgnoreCase(${class-name}Type.JMS.getType()) == 0) {
			// Make sure 
			if (!project.hasFacet(${class-name}Facet.class)) {
				event.fire(new InstallFacets(${class-name}Facet.class));
			}
			// TODO create actual route
		} else {
			System.out.println("Not implemented yet !");	
		}
	}
}
